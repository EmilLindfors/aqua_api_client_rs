{
    "paths": {
        "/v1/geodata/fishhealth/licenseelist": {
            "get": {
                "tags": [
                    "AquaCultureLists"
                ],
                "summary": "List of licensees",
                "description": "Get a complete list of organizations holding an aquaculture license for any species issued by the\r\nDirectorate of Fisheries (www.fiskeridir.no).",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.AquacultureRegister.Models.Dto.OrganizationNameIdDto"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.AquacultureRegister.Models.Dto.OrganizationNameIdDto"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.AquacultureRegister.Models.Dto.OrganizationNameIdDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/species": {
            "get": {
                "tags": [
                    "AquaCultureLists"
                ],
                "summary": "List of all species",
                "description": "Get a list of all species in the aquaculture register.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.AquacultureRegister.Models.Dto.Species"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.AquacultureRegister.Models.Dto.Species"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.AquacultureRegister.Models.Dto.Species"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/codspawningground/{id}": {
            "get": {
                "tags": [
                    "CodSpawningGround"
                ],
                "summary": "Get information about a codspawning ground.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of codspawning ground",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CodSpawningGround.Models.CodSpawningGroundDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CodSpawningGround.Models.CodSpawningGroundDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CodSpawningGround.Models.CodSpawningGroundDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/locality/diseasezonehistory/{localityNo}/{year}/{week}": {
            "get": {
                "tags": [
                    "DiseaseHistory"
                ],
                "summary": "Get history of disease zones for site",
                "description": "Get a history of ISA and PD protection zones and surveillencezone, and also ISA 10km circle (exportrestrictionzone)\r\nfor a site.",
                "parameters": [
                    {
                        "name": "localityNo",
                        "in": "path",
                        "description": "site id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthDiseaseHistory.Models.DiseaseZoneHistory"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/locality/diseasezonehistory/{localityNo}": {
            "get": {
                "tags": [
                    "DiseaseHistory"
                ],
                "summary": "Get history of disease zones for site",
                "description": "Get a history of ISA and PD protection zones and surveillencezone, and also ISA 10km circle (exportrestrictionzone)\r\nfor a site.",
                "parameters": [
                    {
                        "name": "localityNo",
                        "in": "path",
                        "description": "site id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthDiseaseHistory.Models.DiseaseZoneHistory"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/v1/geodata/fishhealth/exportrestrictions/{year}/{week}": {
            "get": {
                "tags": [
                    "ExportRestrictions"
                ],
                "summary": "Export restrictions for week",
                "description": "Fish from aquaculture farms 10 km or closer to a farm infected by, or officially suspected of being\r\ninfected by, infectious salmon anemia (ISA) may not be exported to Australia.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityDto"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityDto"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/exportrestrictions/{localityNo}/{year}/{week}": {
            "get": {
                "tags": [
                    "ExportRestrictions"
                ],
                "summary": "Export info about an export restriction zone for week",
                "description": "Fish from aquaculture farms 10 km or closer to a farm infected by, or officially suspected of being\r\ninfected by, infectious salmon anemia (ISA) may not be exported to Australia.\r\n            \r\nThe result includes a list of other localities within that 10 km zone.",
                "parameters": [
                    {
                        "name": "localityNo",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ExportRestrictions.Models.ExportRestrictionDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ExportRestrictions.Models.ExportRestrictionDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ExportRestrictions.Models.ExportRestrictionDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/download/exportrestrictions": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Use the endpoint /v1/geodata/service/downloadable/exportrestrictions to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/download/anonymous-exportrestrictions": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Anonymously download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Temporary endpoint to cater for Olex chartplotters. To other users: Do not use this endpoint to integrate with barentswatch as this endpoint may be removed without warning. Use the endpoint /v1/geodata/service/downloadable/exportrestrictions to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/fairways/{id}": {
            "get": {
                "tags": [
                    "Fairway"
                ],
                "summary": "Get fairway by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "fairway id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.Fairways.Models.FairwayDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.Fairways.Models.FairwayDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.Fairways.Models.FairwayDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/download/fishhealth": {
            "get": {
                "tags": [
                    "FishhealthDownload"
                ],
                "summary": "Fish Health data export",
                "description": "Endpoints to download export data for localities with salmonoid license as excel or csv files.\r\n            \r\nCleaner fish data is not included after week 16, 2018, because of changes in reporting requirements.",
                "parameters": [
                    {
                        "name": "reporttype",
                        "in": "query",
                        "description": "'disease' gives suspected and confirmed ISA and PD cases. 'lice' gives reported lice\r\n             counts pr week. 'treatments' gives reported medicinal treatments, cleanerfish deployed and mechanical\r\n             removal.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filetype",
                        "in": "query",
                        "description": "Specifies output file format. 'xlsx', 'csv'",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "localityno",
                        "in": "query",
                        "description": "aquaculture site number",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "fromweek",
                        "in": "query",
                        "description": "fromyear and fromweek specifies the first week to include in the export. Must\r\n             correspond to a real year/week combination. If omitted, the export will include all weeks up to the\r\n             specified toyear/toweek.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fromyear",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "toweek",
                        "in": "query",
                        "description": "toyear and toweek specifies the last week to include in the export. Must correspond\r\n             to a real year/week combination. If omitted, the export will include data from the specified\r\n             fromyear/fromweek (see above). If neither from or to is specified, the export will include all weeks.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "toyear",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/download/fishhealth/count": {
            "get": {
                "tags": [
                    "FishhealthDownload"
                ],
                "summary": "Data download count",
                "description": "Output is number of rows that will be exported with current settings. Only contains data for localities\r\nwith salmonoid license.",
                "parameters": [
                    {
                        "name": "reporttype",
                        "in": "query",
                        "description": "'disease' gives suspected and confirmed ISA and PD cases. 'lice' gives reported\r\n            lice counts pr week. 'treatments' gives reported medicinal treatments, cleanerfish deployed and mechanical\r\n            removal.\r\n            Available values: disease, lice, treatments",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "localityno",
                        "in": "query",
                        "description": "aquaculture site number",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "fromweek",
                        "in": "query",
                        "description": "fromyear and fromweek specifies the first week to include in the export. Must\r\n            correspond to a real year/week combination. If omitted, the export will include all weeks up to the\r\n            specified toyear/toweek (see below).",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fromyear",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "toweek",
                        "in": "query",
                        "description": "toyear and toweek specifies the last week to include in the export. Must correspond to\r\n            a real year/week combination. If omitted, the export will include data from the specified fromyear/fromweek\r\n            (see above). If neither from or to is specified, the export will include all weeks.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "toyear",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/download/fishhealth/preview": {
            "get": {
                "tags": [
                    "FishhealthDownload"
                ],
                "summary": "Fish Health data export preview",
                "description": "Preview of 10 rows of Fish Health export data. Only contains data for localities with salmonoid\r\nlicense.",
                "parameters": [
                    {
                        "name": "reporttype",
                        "in": "query",
                        "description": " 'disease' gives suspected and confirmed ISA and PD cases. 'lice' gives reported lice counts pr week.\r\n'treatments' gives reported medicinal treatments, cleanerfish deployed and mechanical removal.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "localityno",
                        "in": "query",
                        "description": "aquaculture site number",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "fromweek",
                        "in": "query",
                        "description": "fromyear and fromweek specifies the first week to include in the export. Must correspond to a real year/week\r\ncombination. If omitted, the export will include all weeks up to the specified toyear/toweek",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fromyear",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "toweek",
                        "in": "query",
                        "description": "toyear and toweek specifies the last week to include in the export. Must correspond to a real year/week\r\ncombination. If omitted, the export will include data from the specified fromyear/fromweek (see above).\r\nIf neither from or to is specified, the export will include all weeks.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "toyear",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "LocalityWeekIlaPdExport": {
                        "description": null,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthDownload.Models.LocalityWeekIlaPdExportDto"
                                    }
                                }
                            }
                        }
                    },
                    "LocalityWeekExport": {
                        "description": null,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthDownload.Models.LocalityWeekExportDto"
                                    }
                                }
                            }
                        }
                    },
                    "TreatmentsExport": {
                        "description": null,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthDownload.Models.TreatmentsExportDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/{year}/{week}": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "National overview for a week",
                "description": "Get summary data for all aquaculture sites for a particular week. Suited to produce an overview of the number\r\nof aquaculture sites that has lice or disease issues in a week, but also how many aquaculture sites that have submitted\r\na report for this week.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "The week part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Ila",
                        "in": "query",
                        "description": "Include only sites with ISA this week (both confirmed and suspected)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IlaConfirmed",
                        "in": "query",
                        "description": "Include only sites with ISA this week (only confirmed)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IlaSuspected",
                        "in": "query",
                        "description": "Include only sites with ISA this week (only suspected)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Pd",
                        "in": "query",
                        "description": "Include only sites with PD this week (both confirmed and suspected)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "PdConfirmed",
                        "in": "query",
                        "description": "Include only sites with PD this week (only confirmed)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "PdSuspected",
                        "in": "query",
                        "description": "Include only sites with PD this week (only suspected)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AllWithReport",
                        "in": "query",
                        "description": "All sites that have reported this week",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AllWithoutReport",
                        "in": "query",
                        "description": "All sites that have not reported for specified week",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AllFallowWithoutReport",
                        "in": "query",
                        "description": "All fallow sites that have not reported for specified week",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AllReportNotMandatoryWithoutReport",
                        "in": "query",
                        "description": "Sites not required to report lice count. This applies to sites that do not produce salmon or trout,\r\nsites that are on land, and to slaughter holding cages",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AllNotFallowWithoutReport",
                        "in": "query",
                        "description": "All active sites that have not reported for specified week",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AboveLiceThreshold",
                        "in": "query",
                        "description": "Above 0.5 avg. female lice",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "BelowLiceThreshold",
                        "in": "query",
                        "description": "Below 0.5 avg. female lice",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AboveMinimumLiceThreshold",
                        "in": "query",
                        "description": "Above 0.2 avg. female lice",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "BelowMinimumLiceThreshold",
                        "in": "query",
                        "description": "Below 0.2 avg. female lice",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "MinLiceUserThreshold",
                        "in": "query",
                        "description": "User defined minimum threshold for average female lice",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "MaxLiceUserThreshold",
                        "in": "query",
                        "description": "User defined maximum threshold for average female lice",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "Organization",
                        "in": "query",
                        "description": "Company/organization number; number returned as OrgNo/organizationNo from other endpoints",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "HasSubstanceTreatments",
                        "in": "query",
                        "description": "has reported substance treatment",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Substance",
                        "in": "query",
                        "description": "E.g. substance=1 (id returned as substanceId from other endpoints providing treatment information)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    {
                        "name": "SubstanceOtherInFeed",
                        "in": "query",
                        "description": "Sites treated in-feed with other substances (other substances substance id=99)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "SubstanceOtherBath",
                        "in": "query",
                        "description": "Sites bath treated with other substances (other substances substance id=99)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ProductionType",
                        "in": "query",
                        "description": "Type of production license.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Purpose",
                        "in": "query",
                        "description": "Type of production license purpose",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AnyGreen",
                        "in": "query",
                        "description": "\"Green\"-licence may be used on sites",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CountyMunicipality",
                        "in": "query",
                        "description": "Norwegian \"kommune-/fylkenummer\"",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CleanerFish",
                        "in": "query",
                        "description": "Cleanerfish species id returned as speciesId from other endpoints. Cleaner fish data is not available\r\nafter week 16, 2018, because of changes in reporting requirements.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Species",
                        "in": "query",
                        "description": "Cleanerfish species id returned as speciesId from other endpoints. Cleaner fish data is not available\r\nafter week 16, 2018, because of changes in reporting requirements.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    {
                        "name": "MechanicalRemoval",
                        "in": "query",
                        "description": "Has reported mechanical removal of lice",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "InsideIlaControlArea",
                        "in": "query",
                        "description": "All sites that are inside an ISA restricted zone",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ProductionArea",
                        "in": "query",
                        "description": "The id of productionarea. Valid values are 1-13",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ShrimpFishingGroundProximity",
                        "in": "query",
                        "description": "All sites that are within 1000 m of shrimpfishingground",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ShrimpfishinggroundOrCodspawninggroundProximity",
                        "in": "query",
                        "description": "All sites that are within 500 m of shrimpfishingground or codspawningground",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsOnLand",
                        "in": "query",
                        "description": "Sites that are on land (if false only sites at sea are included)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "OnlyWithSalmonoidLicense",
                        "in": "query",
                        "description": "Only include localities that have a license for salmon, trout or rainbow trout",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "LicenseSpecies",
                        "in": "query",
                        "description": "One or more species (related to aquaculture register) in lowercase (returned from other endpoint)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "WithinPolygon",
                        "in": "query",
                        "description": "A polygon, that (when set) makes this method only return localities within the polygon",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "NonMedicinalTreatmentType",
                        "in": "query",
                        "description": "Include only localities with the specified nonMedicinalTreatmentTypes.\r\nOnly relevant for reports from updated licereport form starting 2024.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/BW.Api.Api.Licereport.Models.LiceReport.NonMedicinalTreatmentType"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.NationalReportV1"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.NationalReportV1"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.NationalReportV1"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/locality/{year}/{week}": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "Aquaculture site summary for a week",
                "description": "Returns lice and treatment info for specified week, along with basic site info like id, name and position.\r\nThe sites returned may be filtered with optional query parameters.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "The week part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "TagFilteredLocalities",
                        "in": "query",
                        "description": "Include all sites and tag filter matches (if false only filter matches are returned",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Ila",
                        "in": "query",
                        "description": "Include only sites with ISA this week (both confirmed and suspected)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IlaConfirmed",
                        "in": "query",
                        "description": "Include only sites with ISA this week (only confirmed)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IlaSuspected",
                        "in": "query",
                        "description": "Include only sites with ISA this week (only suspected)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Pd",
                        "in": "query",
                        "description": "Include only sites with PD this week (both confirmed and suspected)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "PdConfirmed",
                        "in": "query",
                        "description": "Include only sites with PD this week (only confirmed)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "PdSuspected",
                        "in": "query",
                        "description": "Include only sites with PD this week (only suspected)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AllWithReport",
                        "in": "query",
                        "description": "All sites that have reported this week",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AllWithoutReport",
                        "in": "query",
                        "description": "All sites that have not reported for specified week",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AllFallowWithoutReport",
                        "in": "query",
                        "description": "All fallow sites that have not reported for specified week",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AllReportNotMandatoryWithoutReport",
                        "in": "query",
                        "description": "Sites not required to report lice count. This applies to sites that do not produce salmon or trout,\r\nsites that are on land, and to slaughter holding cages",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AllNotFallowWithoutReport",
                        "in": "query",
                        "description": "All active sites that have not reported for specified week",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AboveLiceThreshold",
                        "in": "query",
                        "description": "Above 0.5 avg. female lice",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "BelowLiceThreshold",
                        "in": "query",
                        "description": "Below 0.5 avg. female lice",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AboveMinimumLiceThreshold",
                        "in": "query",
                        "description": "Above 0.2 avg. female lice",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "BelowMinimumLiceThreshold",
                        "in": "query",
                        "description": "Below 0.2 avg. female lice",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "MinLiceUserThreshold",
                        "in": "query",
                        "description": "User defined minimum threshold for average female lice",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "MaxLiceUserThreshold",
                        "in": "query",
                        "description": "User defined maximum threshold for average female lice",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "Organization",
                        "in": "query",
                        "description": "Company/organization number; number returned as OrgNo/organizationNo from other endpoints",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "HasSubstanceTreatments",
                        "in": "query",
                        "description": "has reported substance treatment",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Substance",
                        "in": "query",
                        "description": "E.g. substance=1 (id returned as substanceId from other endpoints providing treatment information)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    {
                        "name": "SubstanceOtherInFeed",
                        "in": "query",
                        "description": "Sites treated in-feed with other substances (other substances substance id=99)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "SubstanceOtherBath",
                        "in": "query",
                        "description": "Sites bath treated with other substances (other substances substance id=99)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ProductionType",
                        "in": "query",
                        "description": "Type of production license.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Purpose",
                        "in": "query",
                        "description": "Type of production license purpose",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "AnyGreen",
                        "in": "query",
                        "description": "\"Green\"-licence may be used on sites",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CountyMunicipality",
                        "in": "query",
                        "description": "Norwegian \"kommune-/fylkenummer\"",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CleanerFish",
                        "in": "query",
                        "description": "Cleanerfish species id returned as speciesId from other endpoints. Cleaner fish data is not available\r\nafter week 16, 2018, because of changes in reporting requirements.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Species",
                        "in": "query",
                        "description": "Cleanerfish species id returned as speciesId from other endpoints. Cleaner fish data is not available\r\nafter week 16, 2018, because of changes in reporting requirements.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    {
                        "name": "MechanicalRemoval",
                        "in": "query",
                        "description": "Has reported mechanical removal of lice",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "InsideIlaControlArea",
                        "in": "query",
                        "description": "All sites that are inside an ISA restricted zone",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ProductionArea",
                        "in": "query",
                        "description": "The id of productionarea. Valid values are 1-13",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ShrimpFishingGroundProximity",
                        "in": "query",
                        "description": "All sites that are within 1000 m of shrimpfishingground",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ShrimpfishinggroundOrCodspawninggroundProximity",
                        "in": "query",
                        "description": "All sites that are within 500 m of shrimpfishingground or codspawningground",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsOnLand",
                        "in": "query",
                        "description": "Sites that are on land (if false only sites at sea are included)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "OnlyWithSalmonoidLicense",
                        "in": "query",
                        "description": "Only include localities that have a license for salmon, trout or rainbow trout",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "LicenseSpecies",
                        "in": "query",
                        "description": "One or more species (related to aquaculture register) in lowercase (returned from other endpoint)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "WithinPolygon",
                        "in": "query",
                        "description": "A polygon, that (when set) makes this method only return localities within the polygon",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "NonMedicinalTreatmentType",
                        "in": "query",
                        "description": "Include only localities with the specified nonMedicinalTreatmentTypes.\r\nOnly relevant for reports from updated licereport form starting 2024.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/BW.Api.Api.Licereport.Models.LiceReport.NonMedicinalTreatmentType"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityWeekData"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityWeekData"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityWeekData"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/locality/{localityNo}/{year}/{week}": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "Detailed site information for a week",
                "description": "Get full site information for a particular site and week specified by site id (localityNo), year and week.\r\nIn order to interpret this data correctly, familiarity with the lice reporting information from\r\nthe Norwegian Food Safety Authority (www.mattilsynet.no), ILA/PD disease information from\r\nthe Norwegian Veterinary Institute (www.vetinst.no) and aquaculture licenses from\r\nthe Norwegian Directorate of Fisheries (www.fiskeridir.no) is required.\r\n            \r\nCleaner fish is not included after week 16, 2018, because of changes in reporting requirements.\r\n            \r\nThe localityWeek information is updated nightly, with data reported to the Norwegian Food Safety Authority\r\nvia AltInn.",
                "parameters": [
                    {
                        "name": "localityNo",
                        "in": "path",
                        "description": "site id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "year part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "week part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityReportV1"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityReportV1"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityReportV1"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/locality/{localityNo}/avgfemalelice/{year}": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "Average female lice count by site and year",
                "description": "Get a list of average adult female lice count for a full year for a particular site. Suited for displaying\r\nlice development for a period of time at a site.",
                "parameters": [
                    {
                        "name": "localityNo",
                        "in": "path",
                        "description": "site id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityLiceGraphDataDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityLiceGraphDataDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityLiceGraphDataDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/locality/{localityNo}/escape/{year}": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "Escapes by site and year",
                "description": "Get a list of escape incidents for a year, grouped by week",
                "parameters": [
                    {
                        "name": "localityNo",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FarmedFishEscape.Models.LocalityEscapesGraphDataDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FarmedFishEscape.Models.LocalityEscapesGraphDataDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FarmedFishEscape.Models.LocalityEscapesGraphDataDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/locality/{localityNo}/liceMedicationEvents/{year}": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "Medicinal treatments by site and year",
                "description": "Get information about all medicinal treatments for a site for a full year, both in-feed and bath treatments.",
                "parameters": [
                    {
                        "name": "localityNo",
                        "in": "path",
                        "description": "site id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.AllTreatmentsGraphDataDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.AllTreatmentsGraphDataDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.AllTreatmentsGraphDataDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/locality/{localityNo}/liceTreatments/{year}": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "Lice treatments by site and year",
                "description": "Get information about all treatments for a site for a full year, both in-feed and bath treatments.",
                "parameters": [
                    {
                        "name": "localityNo",
                        "in": "path",
                        "description": "site id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.AllTreatmentsGraphDataDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.AllTreatmentsGraphDataDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.AllTreatmentsGraphDataDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/locality/{localityNo}/liceTypeDistribution/{year}": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "Lice count by site and year",
                "description": "Get information about a sites lice count for all different stages of lice development for a full year.",
                "parameters": [
                    {
                        "name": "localityNo",
                        "in": "path",
                        "description": "site id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityLiceDistributionGraphDataDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityLiceDistributionGraphDataDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityLiceDistributionGraphDataDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/locality/{localityNo}/seatemperature/{year}": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "Sea temperature by site and year",
                "description": "Get a list of weekly reported sea temperature measured at or near a site for a full year.",
                "parameters": [
                    {
                        "name": "localityNo",
                        "in": "path",
                        "description": "site id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalitySeaTemperatureGraphDataDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalitySeaTemperatureGraphDataDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalitySeaTemperatureGraphDataDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/localities": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "List all aquaculture sites",
                "description": "Returns a complete and compact list of aquaculture sites with names. The property localityNo is used in\r\nother endpoints to request detailed data for sites.",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Optional query (search by name or site id)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityNameIdMunicipalityDto"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityNameIdMunicipalityDto"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityNameIdMunicipalityDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/localitieswithsalmonoids": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "List all aquaculture sites with salmonoid license",
                "description": "Returns a compact list of aquaculture sites with names for sites that has salmonoid license. The property\r\nlocalityNo is used in other endpoints to request detailed data for sites.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityNameIdDto"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityNameIdDto"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityNameIdDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/localitiesoverlimitbyweek": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "Get count of sites over lice limit by week",
                "description": "Weekly count of sites over lice limit",
                "parameters": [
                    {
                        "name": "startYear",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "endYear",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalitiesOverLimitByWeek"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalitiesOverLimitByWeek"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalitiesOverLimitByWeek"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/localitiesoverlimitbyyear": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "Average count and percentage of sites over lice limit by year",
                "parameters": [
                    {
                        "name": "startYear",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "endYear",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalitiesOverLimitByYear"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalitiesOverLimitByYear"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalitiesOverLimitByYear"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/localitiesoverlimitbyyearandregion": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "Average count and percentage of sites over lice limit, grouped by region",
                "description": "The grouping is done by *current* counties (fylker).",
                "parameters": [
                    {
                        "name": "startYear",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "endYear",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalitiesOverLimitByYearAndRegion"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalitiesOverLimitByYearAndRegion"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalitiesOverLimitByYearAndRegion"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/locality/{localityNo}/disease/{year}": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "Annual disease summary for a site.",
                "description": "Get disease information for a particular site for a full year. An empty array on the \"data\" property\r\nindicates no diseases are confirmed nor suspected for the site in that year.",
                "parameters": [
                    {
                        "name": "localityNo",
                        "in": "path",
                        "description": "site id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.AnnualDiseaseDataDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.AnnualDiseaseDataDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.AnnualDiseaseDataDto"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/v2/geodata/fishhealth/locality/{localityNo}/disease/{year}": {
            "get": {
                "tags": [
                    "FishHealthLocality"
                ],
                "summary": "Annual disease case summary for a site.",
                "description": "Get disease detail information for a particular site for a full year. An empty array on the \"data\" property\r\nindicates no diseases are confirmed nor suspected for the site in that year.",
                "parameters": [
                    {
                        "name": "localityNo",
                        "in": "path",
                        "description": "site id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.AnnualDiseaseCaseDetail"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.AnnualDiseaseCaseDetail"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.AnnualDiseaseCaseDetail"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/forbiddenmedicinalzone-badebehandling/{id}": {
            "get": {
                "tags": [
                    "ForbiddenMedicinalZoneBadebehandling"
                ],
                "summary": "Get information about a zone where bath treatments are prohibited.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of prohibition zone",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ForbiddenMedicinalZones.Models.ForbiddenMedicinalZoneBadebehandling"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ForbiddenMedicinalZones.Models.ForbiddenMedicinalZoneBadebehandling"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ForbiddenMedicinalZones.Models.ForbiddenMedicinalZoneBadebehandling"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/download/forbiddenmedicinalzone-badebehandling": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Use the endpoint /v1/geodata/service/downloadable/forbiddenmedicinalzone-badebehandling to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/gzip": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/forbiddenmedicinalzone-kitinsyntesehemmere/{id}": {
            "get": {
                "tags": [
                    "ForbiddenMedicinalZoneKitinsyntesehemmere"
                ],
                "summary": "Get information about a zone where kitin synthesis prohibitors are prohibited.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of prohibition zone",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ForbiddenMedicinalZones.Models.ForbiddenMedicinalZoneKitinsyntesehemmere"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ForbiddenMedicinalZones.Models.ForbiddenMedicinalZoneKitinsyntesehemmere"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ForbiddenMedicinalZones.Models.ForbiddenMedicinalZoneKitinsyntesehemmere"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/download/forbiddenmedicinalzone-kitinsyntesehemmere": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Use the endpoint /v1/geodata/service/downloadable/forbiddenmedicinalzone-kitinsyntesehemmere to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/gzip": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/ilaprotectionzone/{year}/{week}": {
            "get": {
                "tags": [
                    "IlaControlArea"
                ],
                "summary": "ISA protection zones by for week",
                "description": "Retrieve information about ISA protection zones. It's important to note that the Fish Health application\r\ndoes not have access to historical data about such zones. For weeks preceding the start of availability\r\nof this dataset, data on these zones is not available. See documentation of\r\nv1/geodata/fishhealth/ilacontrolarea/firstvaliddate endpoint.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Year part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "Week part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "title": "GeoJson FeatureCollection",
                                    "required": [
                                        "features"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "FeatureCollection"
                                            ],
                                            "example": "FeatureCollection"
                                        },
                                        "features": {
                                            "title": "GeoJson feature",
                                            "type": "array",
                                            "items": {
                                                "title": "GeoJson Feature",
                                                "required": [
                                                    "geometry",
                                                    "type"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "enum": [
                                                            "Feature"
                                                        ],
                                                        "example": "Feature"
                                                    },
                                                    "properties": {
                                                        "type": "object"
                                                    },
                                                    "geometry": {
                                                        "title": "GeoJson Geometry",
                                                        "type": "object",
                                                        "anyOf": [
                                                            {
                                                                "title": "GeoJson Point Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Point"
                                                                        ],
                                                                        "type": "string",
                                                                        "default": "Point"
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "number"
                                                                        },
                                                                        "example": [
                                                                            10.4,
                                                                            60.5
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson LineString Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "LineString"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "minItems": 2,
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "number"
                                                                            },
                                                                            "example": [
                                                                                10.4,
                                                                                60.5
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson Polygon Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Polygon"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 4,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "minItems": 2,
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "number"
                                                                                },
                                                                                "example": [
                                                                                    10.4,
                                                                                    60.5
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "title": "GeoJson FeatureCollection",
                                    "required": [
                                        "features"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "FeatureCollection"
                                            ],
                                            "example": "FeatureCollection"
                                        },
                                        "features": {
                                            "title": "GeoJson feature",
                                            "type": "array",
                                            "items": {
                                                "title": "GeoJson Feature",
                                                "required": [
                                                    "geometry",
                                                    "type"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "enum": [
                                                            "Feature"
                                                        ],
                                                        "example": "Feature"
                                                    },
                                                    "properties": {
                                                        "type": "object"
                                                    },
                                                    "geometry": {
                                                        "title": "GeoJson Geometry",
                                                        "type": "object",
                                                        "anyOf": [
                                                            {
                                                                "title": "GeoJson Point Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Point"
                                                                        ],
                                                                        "type": "string",
                                                                        "default": "Point"
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "number"
                                                                        },
                                                                        "example": [
                                                                            10.4,
                                                                            60.5
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson LineString Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "LineString"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "minItems": 2,
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "number"
                                                                            },
                                                                            "example": [
                                                                                10.4,
                                                                                60.5
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson Polygon Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Polygon"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 4,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "minItems": 2,
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "number"
                                                                                },
                                                                                "example": [
                                                                                    10.4,
                                                                                    60.5
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "title": "GeoJson FeatureCollection",
                                    "required": [
                                        "features"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "FeatureCollection"
                                            ],
                                            "example": "FeatureCollection"
                                        },
                                        "features": {
                                            "title": "GeoJson feature",
                                            "type": "array",
                                            "items": {
                                                "title": "GeoJson Feature",
                                                "required": [
                                                    "geometry",
                                                    "type"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "enum": [
                                                            "Feature"
                                                        ],
                                                        "example": "Feature"
                                                    },
                                                    "properties": {
                                                        "type": "object"
                                                    },
                                                    "geometry": {
                                                        "title": "GeoJson Geometry",
                                                        "type": "object",
                                                        "anyOf": [
                                                            {
                                                                "title": "GeoJson Point Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Point"
                                                                        ],
                                                                        "type": "string",
                                                                        "default": "Point"
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "number"
                                                                        },
                                                                        "example": [
                                                                            10.4,
                                                                            60.5
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson LineString Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "LineString"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "minItems": 2,
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "number"
                                                                            },
                                                                            "example": [
                                                                                10.4,
                                                                                60.5
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson Polygon Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Polygon"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 4,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "minItems": 2,
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "number"
                                                                                },
                                                                                "example": [
                                                                                    10.4,
                                                                                    60.5
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                },
                "deprecated": true
            }
        },
        "/v2/geodata/fishhealth/ilaprotectionzone/{year}/{week}": {
            "get": {
                "tags": [
                    "IlaControlArea"
                ],
                "summary": "ISA protection zones by for week",
                "description": "Retrieve information about ISA protection zones. It's important to note that the Fish Health application\r\ndoes not have access to historical data about such zones. For weeks preceding the start of availability\r\nof this dataset, data on these zones is not available. See documentation of\r\nv1/geodata/fishhealth/ilacontrolarea/firstvaliddate endpoint. Coordinates are in EPSG:4326.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Year part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "Week part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.IlaControlArea"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.IlaControlArea"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.IlaControlArea"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/ilasurveillancezone/{year}/{week}": {
            "get": {
                "tags": [
                    "IlaControlArea"
                ],
                "summary": "ISA surveillance zones by for week",
                "description": "Retrieve information about ISA surveillance zones. It's important to note that the Fish Health application\r\ndoes not have access to historical data about such zones. For weeks preceding the start of availability\r\nof this dataset, data on these zones is not available. See documentation of\r\nv1/geodata/fishhealth/ilacontrolarea/firstvaliddate endpoint.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Year part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "Week part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "title": "GeoJson FeatureCollection",
                                    "required": [
                                        "features"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "FeatureCollection"
                                            ],
                                            "example": "FeatureCollection"
                                        },
                                        "features": {
                                            "title": "GeoJson feature",
                                            "type": "array",
                                            "items": {
                                                "title": "GeoJson Feature",
                                                "required": [
                                                    "geometry",
                                                    "type"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "enum": [
                                                            "Feature"
                                                        ],
                                                        "example": "Feature"
                                                    },
                                                    "properties": {
                                                        "type": "object"
                                                    },
                                                    "geometry": {
                                                        "title": "GeoJson Geometry",
                                                        "type": "object",
                                                        "anyOf": [
                                                            {
                                                                "title": "GeoJson Point Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Point"
                                                                        ],
                                                                        "type": "string",
                                                                        "default": "Point"
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "number"
                                                                        },
                                                                        "example": [
                                                                            10.4,
                                                                            60.5
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson LineString Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "LineString"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "minItems": 2,
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "number"
                                                                            },
                                                                            "example": [
                                                                                10.4,
                                                                                60.5
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson Polygon Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Polygon"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 4,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "minItems": 2,
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "number"
                                                                                },
                                                                                "example": [
                                                                                    10.4,
                                                                                    60.5
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "title": "GeoJson FeatureCollection",
                                    "required": [
                                        "features"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "FeatureCollection"
                                            ],
                                            "example": "FeatureCollection"
                                        },
                                        "features": {
                                            "title": "GeoJson feature",
                                            "type": "array",
                                            "items": {
                                                "title": "GeoJson Feature",
                                                "required": [
                                                    "geometry",
                                                    "type"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "enum": [
                                                            "Feature"
                                                        ],
                                                        "example": "Feature"
                                                    },
                                                    "properties": {
                                                        "type": "object"
                                                    },
                                                    "geometry": {
                                                        "title": "GeoJson Geometry",
                                                        "type": "object",
                                                        "anyOf": [
                                                            {
                                                                "title": "GeoJson Point Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Point"
                                                                        ],
                                                                        "type": "string",
                                                                        "default": "Point"
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "number"
                                                                        },
                                                                        "example": [
                                                                            10.4,
                                                                            60.5
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson LineString Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "LineString"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "minItems": 2,
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "number"
                                                                            },
                                                                            "example": [
                                                                                10.4,
                                                                                60.5
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson Polygon Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Polygon"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 4,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "minItems": 2,
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "number"
                                                                                },
                                                                                "example": [
                                                                                    10.4,
                                                                                    60.5
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "title": "GeoJson FeatureCollection",
                                    "required": [
                                        "features"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "FeatureCollection"
                                            ],
                                            "example": "FeatureCollection"
                                        },
                                        "features": {
                                            "title": "GeoJson feature",
                                            "type": "array",
                                            "items": {
                                                "title": "GeoJson Feature",
                                                "required": [
                                                    "geometry",
                                                    "type"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "enum": [
                                                            "Feature"
                                                        ],
                                                        "example": "Feature"
                                                    },
                                                    "properties": {
                                                        "type": "object"
                                                    },
                                                    "geometry": {
                                                        "title": "GeoJson Geometry",
                                                        "type": "object",
                                                        "anyOf": [
                                                            {
                                                                "title": "GeoJson Point Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Point"
                                                                        ],
                                                                        "type": "string",
                                                                        "default": "Point"
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "number"
                                                                        },
                                                                        "example": [
                                                                            10.4,
                                                                            60.5
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson LineString Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "LineString"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "minItems": 2,
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "number"
                                                                            },
                                                                            "example": [
                                                                                10.4,
                                                                                60.5
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson Polygon Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Polygon"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 4,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "minItems": 2,
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "number"
                                                                                },
                                                                                "example": [
                                                                                    10.4,
                                                                                    60.5
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                },
                "deprecated": true
            }
        },
        "/v2/geodata/fishhealth/ilasurveillancezone/{year}/{week}": {
            "get": {
                "tags": [
                    "IlaControlArea"
                ],
                "summary": "ISA surveillance zones by for week",
                "description": "Retrieve information about ISA surveillance zones. It's important to note that the Fish Health application\r\ndoes not have access to historical data about such zones. For weeks preceding the start of availability\r\nof this dataset, data on these zones is not available. See documentation of\r\nv1/geodata/fishhealth/ilacontrolarea/firstvaliddate endpoint. Coordinates are in EPSG:4326.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Year part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "Week part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.IlaControlArea"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.IlaControlArea"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.IlaControlArea"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/ilasurveillancezone/{forsknr}/{year}/{week}": {
            "get": {
                "tags": [
                    "IlaControlArea"
                ],
                "summary": "Protection zone for week",
                "description": "Information on specific protection zone for week",
                "parameters": [
                    {
                        "name": "forsknr",
                        "in": "path",
                        "description": "regulation number, or id if there is no regulation number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Year part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "Week part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.IlaControlAreaDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.IlaControlAreaDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.IlaControlAreaDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/ilaprotectionzone/{forsknr}/{year}/{week}": {
            "get": {
                "tags": [
                    "IlaControlArea"
                ],
                "summary": "Surveillance zone for week",
                "description": "Information on specific Surveillance zone for week",
                "parameters": [
                    {
                        "name": "forsknr",
                        "in": "path",
                        "description": "regulation number, or id if there is no regulation number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Year part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "Week part of ISO week date",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.IlaControlAreaDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.IlaControlAreaDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.IlaControlAreaDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/ilacontrolarea/firstvaliddate": {
            "get": {
                "tags": [
                    "IlaControlArea"
                ],
                "summary": "First available surveillance and protection zone data",
                "description": "The application doesn't have data on protection and surveillance zones before this date.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/download/ilaprotectionzone": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Use the endpoint /v1/geodata/service/downloadable/ilaprotectionzone to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Get specified version of dataset. Omit to get latest version.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/download/anonymousilaprotectionzone": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Anonymously download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Temporary endpoint to cater for Olex chartplotters. To other users: Do not use this endpoint to integrate with barentswatch as this endpoint may be removed without warning. Use the endpoint /v1/geodata/service/downloadable/ilaprotectionzone to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/download/ilasurveillancezone": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Use the endpoint /v1/geodata/service/downloadable/ilasurveillancezone to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Get specified version of dataset. Omit to get latest version.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/download/anonymousilasurveillancezone": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Anonymously download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Temporary endpoint to cater for Olex chartplotters. To other users: Do not use this endpoint to integrate with barentswatch as this endpoint may be removed without warning. Use the endpoint /v1/geodata/service/downloadable/ilasurveillancezone to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/download/localitieswithila": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/gzip": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/download/localitieswithpd": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/gzip": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/download/anonymouslocalitieswithpd": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Anonymously download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Temporary endpoint to cater for Olex chartplotters. To other users: Do not use this endpoint to integrate with barentswatch as this endpoint may be removed without warning. Use the endpoint /v1/geodata/service/downloadable/localitieswithpd to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/download/localityarea": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Use the endpoint /v1/geodata/service/downloadable/localityarea to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Get specified version of dataset. Omit to get latest version.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/download/anonymouslocalityarea": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Anonymously download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Temporary endpoint to cater for Olex chartplotters. To other users: Do not use this endpoint to integrate with barentswatch as this endpoint may be removed without warning. Use the endpoint /v1/geodata/service/downloadable/localityarea to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/localityradius/{year}/{week}": {
            "get": {
                "tags": [
                    "LocalityRadius"
                ],
                "summary": "Localities with salmon needed for 5km radius for wellboats",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityDto"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityDto"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.FishhealthLocality.Models.LocalityDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/download/localityradius": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Use the endpoint /v1/geodata/downloadable/localityradius to get the lost of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/maritimeboundary": {
            "get": {
                "tags": [
                    "MaritimeBoundary"
                ],
                "summary": "Get maritime boundaries relevant for aquaculture.",
                "description": "Currently includes 'Norges grunnlinje'. Data source is the Norwegian Mapping Authority.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.MaritimeBoundary.Models.MaritimeBoundaryDto"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.MaritimeBoundary.Models.MaritimeBoundaryDto"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.MaritimeBoundary.Models.MaritimeBoundaryDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/{year}/{week}": {
            "get": {
                "tags": [
                    "MunicipalityAreaWeek"
                ],
                "summary": "Gets a municipality with the given municipality number",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "description": "The numerical id of the municipality",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year part of ISO 8601 week",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "The week part of ISO 8601 week",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityArea"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityArea"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityArea"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/speciescount/{municipalityNumber}/{year}/{week}": {
            "get": {
                "tags": [
                    "MunicipalityAreaWeek"
                ],
                "summary": "Gets a municipality species count with the given municipality number",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "description": "The numerical id of the municipality",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year part of ISO 8601 week",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "The week part of ISO 8601 week",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.AquacultureRegister.Models.AquaCultureSpeciesCategoryCount"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.AquacultureRegister.Models.AquaCultureSpeciesCategoryCount"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.AquacultureRegister.Models.AquaCultureSpeciesCategoryCount"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/organization/{municipalityNumber}/{year}/{week}": {
            "get": {
                "tags": [
                    "MunicipalityAreaWeek"
                ],
                "summary": "Gets a municipality organization with the given municipality number",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "description": "The numerical id of the municipality",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "The year part of ISO 8601 week",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "The week part of ISO 8601 week",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityOrganization"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityOrganization"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityOrganization"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipalities": {
            "get": {
                "tags": [
                    "MunicipalityAreaWeek"
                ],
                "summary": "Searchable list of municipalities",
                "description": "The query can be used to filter the list. Fields used when filtering are:\r\n- Name",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "search query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityArea"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityArea"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityArea"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/locality/{year}": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Gets the number of aquaculture sites in the municipality by year",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityLocalityStatistics"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityLocalityStatistics"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityLocalityStatistics"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/realareaused/{year}": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Get the total area including moorings of aquaculture localities in the municipality, in square meters, for a single year.",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityRealAreaUsage"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityRealAreaUsage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityRealAreaUsage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/locality": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Gets the number of aquaculture sites in the municipality for all years back to 2012",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityLocalityStatistics"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityLocalityStatistics"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityLocalityStatistics"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipality}/localityarea/{year}": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Get area in ㎡ of localities within municipality by year",
                "parameters": [
                    {
                        "name": "municipality",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityLocalityAreaStatistics"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityLocalityAreaStatistics"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityLocalityAreaStatistics"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipality}/localityarea": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Get area in ㎡ of localities within a municipality",
                "parameters": [
                    {
                        "name": "municipality",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityLocalityAreaStatisticsSummary"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityLocalityAreaStatisticsSummary"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityLocalityAreaStatisticsSummary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/capacity/{year}": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Gets aquaculture capacity statistics for the municipality by year",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityCapacityStatistics"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityCapacityStatistics"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityCapacityStatistics"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/capacity": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Gets aquaculture capacity statistics for the municipality for all years back to 2012",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityCapacityStatistics"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityCapacityStatistics"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityCapacityStatistics"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/salmonlice": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Gets salmon lice statistics for the municipality for all years back to 2012",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalitySalmonLiceReportsModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalitySalmonLiceReportsModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalitySalmonLiceReportsModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/treatment": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Gets treatment statistics for the municipality for all years back to 2012",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityTreatmentCount"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityTreatmentCount"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityTreatmentCount"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/momb": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Gets momb environmental survey statistics for the municipality for all years back to 2012",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MomBYearConditionCount"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MomBYearConditionCount"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MomBYearConditionCount"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/rivercatch": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Gets river catch statistics for the municipality for all years back to 2012",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityRiverCatchCount"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityRiverCatchCount"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityRiverCatchCount"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/environmentalsurveys": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Gets environmental survey statistics for the municipality for all years back to 2012",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.EnvironmentalSurveysYearCount"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.EnvironmentalSurveysYearCount"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.EnvironmentalSurveysYearCount"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/farmedfishescapes": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Gets farmed fish escape statistics for the municipality for all years back to 2012",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityFarmedFishEscapes"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityFarmedFishEscapes"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityFarmedFishEscapes"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/payout": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Gets payouts from the aquaculture fund for the municipality for all years back to 2018",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.Payout.Models.PayoutModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.Payout.Models.PayoutModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.Payout.Models.PayoutModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/realareaused": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Get the total area including moorings of aquaculture localities in the municipality, in square meters, for every year since 2023.",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityRealAreaUsage"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityRealAreaUsage"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityRealAreaUsage"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/municipality/{municipalityNumber}/fishhealth/{disease}": {
            "get": {
                "tags": [
                    "MunicipalityStatistics"
                ],
                "summary": "Get the sickness statistics",
                "parameters": [
                    {
                        "name": "municipalityNumber",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disease",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityFishHealthDiseaseStatistics"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityFishHealthDiseaseStatistics"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.CountyAndMunicipality.Models.MunicipalityFishHealthDiseaseStatistics"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/download/pdzone_borders": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Use the endpoint /v1/geodata/service/downloadable/pdzone_borders to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Get specified version of dataset. Omit to get latest version.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/download/anonymouspdzone_borders": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Anonymously download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Temporary endpoint to cater for Olex chartplotters. To other users: Do not use this endpoint to integrate with barentswatch as this endpoint may be removed without warning. Use the endpoint /v1/geodata/service/downloadable/pdzone_borders to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/pdprotectionzone/{year}/{week}": {
            "get": {
                "tags": [
                    "PdControlArea"
                ],
                "summary": "Local PD protection zones for week",
                "description": "Retrieve information about local PD protection zones. It's important to note that the Fish Health\r\napplication does not have access to historical data about such zones. For weeks preceding the start of\r\navailability of this dataset, data on these zones is not available. See documentation of\r\nv1/geodata/fishhealth/pdcontrolarea/firstvaliddate endpoint.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "title": "GeoJson FeatureCollection",
                                    "required": [
                                        "features"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "FeatureCollection"
                                            ],
                                            "example": "FeatureCollection"
                                        },
                                        "features": {
                                            "title": "GeoJson feature",
                                            "type": "array",
                                            "items": {
                                                "title": "GeoJson Feature",
                                                "required": [
                                                    "geometry",
                                                    "type"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "enum": [
                                                            "Feature"
                                                        ],
                                                        "example": "Feature"
                                                    },
                                                    "properties": {
                                                        "type": "object"
                                                    },
                                                    "geometry": {
                                                        "title": "GeoJson Geometry",
                                                        "type": "object",
                                                        "anyOf": [
                                                            {
                                                                "title": "GeoJson Point Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Point"
                                                                        ],
                                                                        "type": "string",
                                                                        "default": "Point"
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "number"
                                                                        },
                                                                        "example": [
                                                                            10.4,
                                                                            60.5
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson LineString Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "LineString"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "minItems": 2,
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "number"
                                                                            },
                                                                            "example": [
                                                                                10.4,
                                                                                60.5
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson Polygon Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Polygon"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 4,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "minItems": 2,
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "number"
                                                                                },
                                                                                "example": [
                                                                                    10.4,
                                                                                    60.5
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "title": "GeoJson FeatureCollection",
                                    "required": [
                                        "features"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "FeatureCollection"
                                            ],
                                            "example": "FeatureCollection"
                                        },
                                        "features": {
                                            "title": "GeoJson feature",
                                            "type": "array",
                                            "items": {
                                                "title": "GeoJson Feature",
                                                "required": [
                                                    "geometry",
                                                    "type"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "enum": [
                                                            "Feature"
                                                        ],
                                                        "example": "Feature"
                                                    },
                                                    "properties": {
                                                        "type": "object"
                                                    },
                                                    "geometry": {
                                                        "title": "GeoJson Geometry",
                                                        "type": "object",
                                                        "anyOf": [
                                                            {
                                                                "title": "GeoJson Point Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Point"
                                                                        ],
                                                                        "type": "string",
                                                                        "default": "Point"
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "number"
                                                                        },
                                                                        "example": [
                                                                            10.4,
                                                                            60.5
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson LineString Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "LineString"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "minItems": 2,
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "number"
                                                                            },
                                                                            "example": [
                                                                                10.4,
                                                                                60.5
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson Polygon Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Polygon"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 4,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "minItems": 2,
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "number"
                                                                                },
                                                                                "example": [
                                                                                    10.4,
                                                                                    60.5
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "title": "GeoJson FeatureCollection",
                                    "required": [
                                        "features"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "FeatureCollection"
                                            ],
                                            "example": "FeatureCollection"
                                        },
                                        "features": {
                                            "title": "GeoJson feature",
                                            "type": "array",
                                            "items": {
                                                "title": "GeoJson Feature",
                                                "required": [
                                                    "geometry",
                                                    "type"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "enum": [
                                                            "Feature"
                                                        ],
                                                        "example": "Feature"
                                                    },
                                                    "properties": {
                                                        "type": "object"
                                                    },
                                                    "geometry": {
                                                        "title": "GeoJson Geometry",
                                                        "type": "object",
                                                        "anyOf": [
                                                            {
                                                                "title": "GeoJson Point Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Point"
                                                                        ],
                                                                        "type": "string",
                                                                        "default": "Point"
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "number"
                                                                        },
                                                                        "example": [
                                                                            10.4,
                                                                            60.5
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson LineString Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "LineString"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "minItems": 2,
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "number"
                                                                            },
                                                                            "example": [
                                                                                10.4,
                                                                                60.5
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson Polygon Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Polygon"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 4,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "minItems": 2,
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "number"
                                                                                },
                                                                                "example": [
                                                                                    10.4,
                                                                                    60.5
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                },
                "deprecated": true
            }
        },
        "/v2/geodata/fishhealth/pdprotectionzone/{year}/{week}": {
            "get": {
                "tags": [
                    "PdControlArea"
                ],
                "summary": "Local PD protection zones for week",
                "description": "Retrieve information about local PD protection zones. It's important to note that the Fish Health\r\napplication does not have access to historical data about such zones. For weeks preceding the start of\r\navailability of this dataset, data on these zones is not available. See documentation of\r\nv1/geodata/fishhealth/pdcontrolarea/firstvaliddate endpoint. Coordinates are in EPSG:4326.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.PdControlArea"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.PdControlArea"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.PdControlArea"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/pdsurveillancezone/{year}/{week}": {
            "get": {
                "tags": [
                    "PdControlArea"
                ],
                "summary": "Local PD surveillance zones for week",
                "description": "Retrieve information about local PD surveillance zones. It's important to note that the Fish Health\r\napplication does not have access to historical data about such zones. For weeks preceding the start of\r\navailability of this dataset, data on these zones is not available. See documentation of\r\nv1/geodata/fishhealth/pdcontrolarea/firstvaliddate endpoint.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "title": "GeoJson FeatureCollection",
                                    "required": [
                                        "features"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "FeatureCollection"
                                            ],
                                            "example": "FeatureCollection"
                                        },
                                        "features": {
                                            "title": "GeoJson feature",
                                            "type": "array",
                                            "items": {
                                                "title": "GeoJson Feature",
                                                "required": [
                                                    "geometry",
                                                    "type"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "enum": [
                                                            "Feature"
                                                        ],
                                                        "example": "Feature"
                                                    },
                                                    "properties": {
                                                        "type": "object"
                                                    },
                                                    "geometry": {
                                                        "title": "GeoJson Geometry",
                                                        "type": "object",
                                                        "anyOf": [
                                                            {
                                                                "title": "GeoJson Point Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Point"
                                                                        ],
                                                                        "type": "string",
                                                                        "default": "Point"
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "number"
                                                                        },
                                                                        "example": [
                                                                            10.4,
                                                                            60.5
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson LineString Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "LineString"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "minItems": 2,
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "number"
                                                                            },
                                                                            "example": [
                                                                                10.4,
                                                                                60.5
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson Polygon Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Polygon"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 4,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "minItems": 2,
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "number"
                                                                                },
                                                                                "example": [
                                                                                    10.4,
                                                                                    60.5
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "title": "GeoJson FeatureCollection",
                                    "required": [
                                        "features"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "FeatureCollection"
                                            ],
                                            "example": "FeatureCollection"
                                        },
                                        "features": {
                                            "title": "GeoJson feature",
                                            "type": "array",
                                            "items": {
                                                "title": "GeoJson Feature",
                                                "required": [
                                                    "geometry",
                                                    "type"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "enum": [
                                                            "Feature"
                                                        ],
                                                        "example": "Feature"
                                                    },
                                                    "properties": {
                                                        "type": "object"
                                                    },
                                                    "geometry": {
                                                        "title": "GeoJson Geometry",
                                                        "type": "object",
                                                        "anyOf": [
                                                            {
                                                                "title": "GeoJson Point Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Point"
                                                                        ],
                                                                        "type": "string",
                                                                        "default": "Point"
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "number"
                                                                        },
                                                                        "example": [
                                                                            10.4,
                                                                            60.5
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson LineString Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "LineString"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "minItems": 2,
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "number"
                                                                            },
                                                                            "example": [
                                                                                10.4,
                                                                                60.5
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson Polygon Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Polygon"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 4,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "minItems": 2,
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "number"
                                                                                },
                                                                                "example": [
                                                                                    10.4,
                                                                                    60.5
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "title": "GeoJson FeatureCollection",
                                    "required": [
                                        "features"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "FeatureCollection"
                                            ],
                                            "example": "FeatureCollection"
                                        },
                                        "features": {
                                            "title": "GeoJson feature",
                                            "type": "array",
                                            "items": {
                                                "title": "GeoJson Feature",
                                                "required": [
                                                    "geometry",
                                                    "type"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "enum": [
                                                            "Feature"
                                                        ],
                                                        "example": "Feature"
                                                    },
                                                    "properties": {
                                                        "type": "object"
                                                    },
                                                    "geometry": {
                                                        "title": "GeoJson Geometry",
                                                        "type": "object",
                                                        "anyOf": [
                                                            {
                                                                "title": "GeoJson Point Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Point"
                                                                        ],
                                                                        "type": "string",
                                                                        "default": "Point"
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "number"
                                                                        },
                                                                        "example": [
                                                                            10.4,
                                                                            60.5
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson LineString Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "LineString"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 2,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "minItems": 2,
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "number"
                                                                            },
                                                                            "example": [
                                                                                10.4,
                                                                                60.5
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "title": "GeoJson Polygon Geometry",
                                                                "required": [
                                                                    "type",
                                                                    "coordinates"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "Polygon"
                                                                        ]
                                                                    },
                                                                    "coordinates": {
                                                                        "minItems": 4,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "minItems": 2,
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "number"
                                                                                },
                                                                                "example": [
                                                                                    10.4,
                                                                                    60.5
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        "bbox": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                },
                "deprecated": true
            }
        },
        "/v2/geodata/fishhealth/pdsurveillancezone/{year}/{week}": {
            "get": {
                "tags": [
                    "PdControlArea"
                ],
                "summary": "Local PD surveillance zones for week",
                "description": "Retrieve information about local PD surveillance zones. It's important to note that the Fish Health\r\napplication does not have access to historical data about such zones. For weeks preceding the start of\r\navailability of this dataset, data on these zones is not available. See documentation of\r\nv1/geodata/fishhealth/pdcontrolarea/firstvaliddate endpoint. Coordinates are in EPSG:4326.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.PdControlArea"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.PdControlArea"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.PdControlArea"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/pdsurveillancezone/{forsknr}/{year}/{week}": {
            "get": {
                "tags": [
                    "PdControlArea"
                ],
                "summary": "Specific protection zone for week",
                "description": "Information on specific protection zone for week",
                "parameters": [
                    {
                        "name": "forsknr",
                        "in": "path",
                        "description": "regulation number, or id if there is no regulation number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.PdControlAreaDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.PdControlAreaDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.PdControlAreaDto"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/pdprotectionzone/{forsknr}/{year}/{week}": {
            "get": {
                "tags": [
                    "PdControlArea"
                ],
                "summary": "Specific surveillance zone for week",
                "description": "Information on specific surveillance zone for week",
                "parameters": [
                    {
                        "name": "forsknr",
                        "in": "path",
                        "description": "regulation number, or id if there is no regulation number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.PdControlAreaDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.PdControlAreaDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ControlAreas.Models.PdControlAreaDto"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/pdcontrolarea/firstvaliddate": {
            "get": {
                "tags": [
                    "PdControlArea"
                ],
                "summary": "Surveillance and protection zone data start date",
                "description": "The application does not have data on protection and surveillance zones before this date.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/download/pdprotectionzone": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Use the endpoint /v1/geodata/service/downloadable/pdprotectionzone to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Get specified version of dataset. Omit to get latest version.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/download/anonymouspdprotectionzone": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Anonymously download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Temporary endpoint to cater for Olex chartplotters. To other users: Do not use this endpoint to integrate with barentswatch as this endpoint may be removed without warning. Use the endpoint /v1/geodata/service/downloadable/pdprotectionzone to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/download/pdsurveillancezone": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Use the endpoint /v1/geodata/service/downloadable/pdsurveillancezone to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Get specified version of dataset. Omit to get latest version.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/download/anonymouspdsurveillancezone": {
            "get": {
                "tags": [
                    "Download"
                ],
                "summary": "Anonymously download dataset to chart plotter and other file formats",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Temporary endpoint to cater for Olex chartplotters. To other users: Do not use this endpoint to integrate with barentswatch as this endpoint may be removed without warning. Use the endpoint /v1/geodata/service/downloadable/pdsurveillancezone to get the list of supported file formats for this dataset",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/pdzone": {
            "get": {
                "tags": [
                    "PdZone"
                ],
                "summary": "Get national PD zones.",
                "description": "Get the national PD zone, and the national PD surveillance zone.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.IlaPds.Models.PdZone"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.IlaPds.Models.PdZone"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.IlaPds.Models.PdZone"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/productionarea": {
            "get": {
                "tags": [
                    "ProductionArea"
                ],
                "summary": "Get all production areas",
                "description": "Get list of all production areas, with colors and validity dates according to produksjonsområdeforskriften",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ProductionAreas.Models.ProductionArea"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ProductionAreas.Models.ProductionArea"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.ProductionAreas.Models.ProductionArea"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/v1/geodata/productionarea/{productionAreaId}/{year}/{week}": {
            "get": {
                "tags": [
                    "ProductionArea"
                ],
                "summary": "Get productionarea information for a specific week",
                "description": "Information about number of sites is from the aquaculture register.",
                "parameters": [
                    {
                        "name": "productionAreaId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ProductionAreas.Models.ProductionAreaWeek"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ProductionAreas.Models.ProductionAreaWeek"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ProductionAreas.Models.ProductionAreaWeek"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/proposedprotectedarea/{id}": {
            "get": {
                "tags": [
                    "ProposedProtectedAreas"
                ],
                "summary": "Get information about a proposed protected area identified by a given id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of proposed protected area",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ProtectedAreas.Models.ProtectedArea"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ProtectedAreas.Models.ProtectedArea"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ProtectedAreas.Models.ProtectedArea"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/protectedarea/{id}": {
            "get": {
                "tags": [
                    "ProtectedAreas"
                ],
                "summary": "Get information about a given protected area identified id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of protected area",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ProtectedAreas.Models.ProtectedArea"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ProtectedAreas.Models.ProtectedArea"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ProtectedAreas.Models.ProtectedArea"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/salmonfjord/{id}": {
            "get": {
                "tags": [
                    "SalmonFjord"
                ],
                "summary": "Get information about a salmon fjord.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of salmonfjord",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.SalmonFjord.Models.SalmonFjordDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.SalmonFjord.Models.SalmonFjordDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.SalmonFjord.Models.SalmonFjordDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/salmonriver": {
            "get": {
                "tags": [
                    "SalmonRiver"
                ],
                "summary": "Get all Norwegian salmon rivers as a list.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.SalmonRivers.Models.SalmonRiver"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.SalmonRivers.Models.SalmonRiver"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.SalmonRivers.Models.SalmonRiver"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/salmonriver/{riverId}": {
            "get": {
                "tags": [
                    "SalmonRiver"
                ],
                "summary": "Get information about a specific Norwegian salmon river by ID.",
                "parameters": [
                    {
                        "name": "riverId",
                        "in": "path",
                        "description": "ID of the river (vassdragsnummer).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "return catch data four years back from this year",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.SalmonRivers.Models.SalmonRiver"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.SalmonRivers.Models.SalmonRiver"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.SalmonRivers.Models.SalmonRiver"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/shellsandarea/{objectId}": {
            "get": {
                "tags": [
                    "ShellSandArea"
                ],
                "parameters": [
                    {
                        "name": "objectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ShellSandArea.Models.ShellSandAreaModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ShellSandArea.Models.ShellSandAreaModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ShellSandArea.Models.ShellSandAreaModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/shrimpfishingground/{id}": {
            "get": {
                "tags": [
                    "ShrimpFishingGround"
                ],
                "summary": "Get information about a shrimp fishing ground.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of shrimpfishingground",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ShrimpFishingGrounds.Models.Dto.ShrimpFishingGroundDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ShrimpFishingGrounds.Models.Dto.ShrimpFishingGroundDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.ShrimpFishingGrounds.Models.Dto.ShrimpFishingGroundDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishslaughterhouses": {
            "get": {
                "tags": [
                    "Slaughterhouse"
                ],
                "summary": "Searchable list of fish slaughterhouses",
                "description": "Get a list of all fish slaughterhouses. Only fish slaughterhouses with a geometry and with a valid\r\nlicense at or after week 2019/23 are included.\r\n            \r\nThe query can be used to filter the list. Establishment, Company and ApprovalNumber fields are used when\r\nfiltering.",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "search query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.Slaughterhouse.Models.SlaughterhouseLocality"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.Slaughterhouse.Models.SlaughterhouseLocality"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.Slaughterhouse.Models.SlaughterhouseLocality"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishslaughterhouses/{year}/{week}": {
            "get": {
                "tags": [
                    "Slaughterhouse"
                ],
                "summary": "Fish slaughterhouses by week",
                "description": "List of fish slaughterhouses for a specific week. No results for weeks before 2019/23.",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.Slaughterhouse.Models.SlaughterhouseLocality"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.Slaughterhouse.Models.SlaughterhouseLocality"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.Slaughterhouse.Models.SlaughterhouseLocality"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishslaughterhouse/{id}/{year}/{week}": {
            "get": {
                "tags": [
                    "Slaughterhouse"
                ],
                "summary": "Fish slaughterhouse details",
                "description": "Details about a fish slaughterhouse for a specific week. No results for weeks before 2019/23.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.Slaughterhouse.Models.SlaughterhouseDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.Slaughterhouse.Models.SlaughterhouseDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.Slaughterhouse.Models.SlaughterhouseDetails"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Fish slaughterhouse not found, or har no valid license this week."
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/updatestatus": {
            "get": {
                "tags": [
                    "UpdateStatus"
                ],
                "summary": "Update status",
                "description": "Get a timestamp for when the data sources was last imported. All other endpoint serve data last updated\r\nat these times.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/vesseltrack/{mmsi}/{year}/{week}": {
            "get": {
                "tags": [
                    "VesselTrackWeek"
                ],
                "summary": "Vessel track by week and a list of visited fish farms, disease zones.",
                "description": "All vessel tracks for wellboats or other vessels for a complete week and all visited fish farms.\r\nFrom week 35, 2020 all vessels that have visited a fish farm are included that week,\r\nas well as all wellboats.\r\nFrom week 35, 2020 the disease zones that the vessels pass through are also included.",
                "parameters": [
                    {
                        "name": "mmsi",
                        "in": "path",
                        "description": "Maritime Mobile Service Identity - Identification number for a vessel",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vessel track by week and a list of visited fish farms, disease zones.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselTrackWeek"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselTrackWeek"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselTrackWeek"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No vessel track data found for the given mmsi and week"
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/locality/{localityno}/vessel/{year}/{week}": {
            "get": {
                "tags": [
                    "VesselTrackWeek"
                ],
                "summary": "Vessel visits by site and week",
                "description": "Vessel visits by site and week",
                "parameters": [
                    {
                        "name": "localityno",
                        "in": "path",
                        "description": "site id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "week",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselTrackLocalityWeek"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselTrackLocalityWeek"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselTrackLocalityWeek"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/locality/{localityno}/vessel/{year}": {
            "get": {
                "tags": [
                    "VesselTrackWeek"
                ],
                "summary": "Vessel visits by site and week, for the whole year",
                "parameters": [
                    {
                        "name": "localityno",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselTrackLocalityWeek"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselTrackLocalityWeek"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselTrackLocalityWeek"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/vesselslatestpositions": {
            "get": {
                "tags": [
                    "VesselTrackWeek"
                ],
                "summary": "Get the latest positions for all tracked vessels (vessels with site visits or wellboats)",
                "description": "",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselPosition"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselPosition"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselPosition"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/vesselslatestpositions/{mmsi}": {
            "get": {
                "tags": [
                    "VesselTrackWeek"
                ],
                "summary": "Get the latest position for a vessel (that has with site visits or is a wellboats or slaughter boat)",
                "description": "",
                "parameters": [
                    {
                        "name": "mmsi",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "maximum": 999999999,
                            "minimum": 999999,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselPosition"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselPosition"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselPosition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/geodata/fishhealth/vessels": {
            "get": {
                "tags": [
                    "VesselTrackWeek"
                ],
                "summary": "Search all vessels with vesseltracks",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Optional search query (searches vesselName field)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselInfo"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselInfo"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BW.Api.Api.VesselTrackWeeks.Models.VesselInfo"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}